# .github/workflows/pipeline.yml
name: DevSecOps CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  security-pipeline:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      # STAGE 1: Checkout code
      - name: Checkout code
        id: checkout
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955
        with:
          fetch-depth: 0 # Required for Gitleaks to scan full history

      # STAGE 2: Set up Python environment
      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: '3.9'

      # STAGE 3: Install dependencies
      - name: Install Python dependencies
        id: install-deps
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt
          pip install bandit pytest

      # STAGE 4: Run Unit Tests
      - name: Run Unit Tests
        id: unit-tests
        run: |
          pytest tests/

      # STAGE 5: Static Code Analysis (SAST) with Bandit
      - name: Run Bandit SAST Scan
        id: bandit-sast
        run: |
          bandit -c security-tools/bandit-config.yml -r app/ -f json -o results/bandit-report.json

      # STAGE 6: Dependency Scanning (SCA) with Snyk
      # CORRECTED: Using the official Snyk GitHub Action.
      - name: Run Snyk SCA Scan
        id: snyk-sca
        uses: snyk/actions/python@9adf32b1121593767fc3c057af55b55db032dc04
        continue-on-error: true # Set to true to allow the pipeline to continue and upload the report. Snyk action will still fail the check on PRs.
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --file=app/requirements.txt --severity-threshold=high --json-file-output=results/snyk-report.json

      # STAGE 7: Secret Detection with Gitleaks
      - name: Run Gitleaks Secret Scan
        id: gitleaks-secrets
        uses: gitleaks/gitleaks-action@ff98106e4c7b2bc287b24eaf42907196329070c7
        env:
          GITLEAKS_ENABLE_EXIT_CODE: "true" # Ensures the action fails the job if secrets are found
        with:
          report_path: results/gitleaks-report.json
          report_format: json

      # STAGE 8: Build Docker Image
      - name: Set up Docker Buildx
        id: setup-buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435

      - name: Build Docker image
        id: build-image
        uses: docker/build-push-action@ca052bb54ab0790a636c9b5f226502c73d547a25
        with:
          context: .
          file: ./Dockerfile
          push: false
          load: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ci-cd-secured-pipeline:latest

      # STAGE 9: Container Security Scan with Trivy
      - name: Run Trivy Vulnerability Scanner
        id: trivy-scan
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8
        with:
          image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/ci-cd-secured-pipeline:latest'
          format: 'json'
          output: 'results/trivy-report.json'
          severity: 'HIGH,CRITICAL'
          exit-code: '1'

      # STAGE 10: Upload Scan Reports
      - name: Upload Security Scan Reports
        id: upload-reports
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        with:
          name: security-reports
          path: results/

      # STAGE 11: Deploy to Docker Hub (Conditional)
      - name: Login to Docker Hub
        id: docker-login
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push to Docker Hub
        id: docker-push
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: docker/build-push-action@ca052bb54ab0790a636c9b5f226502c73d547a25
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/ci-cd-secured-pipeline:latest